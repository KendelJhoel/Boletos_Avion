@model Boletos_Avion.Models.EditProfileViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/css/Profile.css" />
}

<div class="profile-container">
    <div class="profile-header text-center">
        <h1 id="userNameDisplay">@Model.Nombre</h1>
        <p id="userEmailDisplay">@ViewContext.HttpContext.Session.GetString("UserEmail")</p>
        <button id="toggleEditBtn" class="btn btn-link">
            <i id="editIcon" class="fa fa-pencil"></i>
        </button>
    </div>
    <hr />
    <div class="profile-content">
        <form id="editProfileForm" asp-action="EditProfile" method="post">
            @Html.HiddenFor(model => model.IdUsuario)
            <table class="table table-bordered profile-table">
                <tr>
                    <th>Nombre</th>
                    <td>
                        @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @readonly = "readonly" })
                    </td>
                </tr>
                <tr>
                    <th>Teléfono</th>
                    <td>
                        @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control", @readonly = "readonly" })
                    </td>
                </tr>
                <tr>
                    <th>Dirección</th>
                    <td>
                        @Html.TextBoxFor(model => model.Direccion, new { @class = "form-control", @readonly = "readonly" })
                    </td>
                </tr>
                <tr>
                    <th>Documento de Identidad</th>
                    <td>
                        @Html.TextBoxFor(model => model.DocumentoIdentidad, new { @class = "form-control", @readonly = "readonly" })
                    </td>
                </tr>
                <tr>
                    <th>Contraseña</th>
                    <td>
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.Contrasena, new { @class = "form-control", type = "password", @readonly = "readonly", id = "passwordField" })
                            <button type="button" class="btn btn-outline-secondary" id="togglePasswordVisibility" disabled>
                                <i class="fa fa-eye" id="eyeIcon"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            </table>
            <div class="text-center">
                <button type="submit" id="saveChangesBtn" class="btn btn-success" disabled>Guardar cambios</button>
            </div>
        </form>
    </div>
</div>

<!-- Modal para confirmar el descarte de cambios -->
<div class="modal fade" id="discardChangesModal" tabindex="-1" aria-labelledby="discardChangesModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="discardChangesModalLabel">Descartar cambios</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                ¿Desea descartar los cambios realizados?
            </div>
            <div class="modal-footer">
                <button type="button" id="modalCancelBtn" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
                <button type="button" id="modalConfirmBtn" class="btn btn-danger">Sí, descartar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/js/all.min.js"></script>
    <script>
        $(document).ready(function () {
            var originalData = {};
            var isEditing = false;
            var hasChanges = false;

            // Capturar datos originales
            function captureOriginalData() {
                $('#editProfileForm').find('input[type="text"], input[type="password"]').each(function () {
                    originalData[$(this).attr('name')] = $(this).val();
                });
            }
            captureOriginalData();

            // Verificar si hay cambios
            function checkForChanges() {
                hasChanges = false;
                $('#editProfileForm').find('input[type="text"], input[type="password"]').each(function () {
                    var fieldName = $(this).attr('name');
                    if ($(this).val() !== originalData[fieldName]) {
                        hasChanges = true;
                        return false;
                    }
                });
                $('#saveChangesBtn').prop('disabled', !hasChanges);
            }

            // Detectar cambios en los inputs
            $('#editProfileForm').find('input[type="text"], input[type="password"]').on('input', function () {
                checkForChanges();
            });

            // Alternar modo edición
            $('#toggleEditBtn').click(function (e) {
                e.preventDefault();
                if (!isEditing) {
                    // Activar edición
                    isEditing = true;
                    $('#editProfileForm').find('input').removeAttr('readonly');
                    $('#editIcon').removeClass('fa-pencil').addClass('fa-lock');
                    $('#saveChangesBtn').show();
                    $('#togglePasswordVisibility').prop('disabled', false); // Activar botón de ojo
                } else {
                    // Si hay cambios, preguntar si se descartan
                    if (hasChanges) {
                        $('#discardChangesModal').modal('show');
                    } else {
                        toggleToReadOnly();
                    }
                }
            });

            // Confirmar descarte
            $('#modalConfirmBtn').click(function () {
                for (var key in originalData) {
                    $('[name="' + key + '"]').val(originalData[key]);
                }
                checkForChanges();
                $('#discardChangesModal').modal('hide');
                toggleToReadOnly();
            });

            // Cancelar descarte
            $('#modalCancelBtn').click(function () {
                $('#discardChangesModal').modal('hide');
            });

            // Función para volver a modo lectura
            function toggleToReadOnly() {
                isEditing = false;
                $('#editProfileForm').find('input').prop('readonly', true);
                $('#editIcon').removeClass('fa-lock').addClass('fa-pencil');
                $('#saveChangesBtn').prop('disabled', true).hide();
                $('#togglePasswordVisibility').prop('disabled', true); // Desactivar botón de ojo
                $('#passwordField').attr('type', 'password'); // Esconder contraseña nuevamente
                $('#eyeIcon').removeClass('fa-eye-slash').addClass('fa-eye'); // Cambiar ícono
            }

            // Mostrar/ocultar contraseña
            $('#togglePasswordVisibility').click(function () {
                let passwordField = $('#passwordField');
                let icon = $('#eyeIcon');

                if (passwordField.attr('type') === 'password') {
                    passwordField.attr('type', 'text');
                    icon.removeClass('fa-eye').addClass('fa-eye-slash');
                } else {
                    passwordField.attr('type', 'password');
                    icon.removeClass('fa-eye-slash').addClass('fa-eye');
                }
            });

            // Inicialmente ocultar el botón de guardar y deshabilitar el botón de ver contraseña
            $('#saveChangesBtn').hide();
            $('#togglePasswordVisibility').prop('disabled', true);
        });
    </script>
}
