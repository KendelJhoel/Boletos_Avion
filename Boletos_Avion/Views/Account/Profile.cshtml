@model Boletos_Avion.Models.EditProfileViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="@Url.Content("~/css/Profile.css")" asp-append-version="true" />
}

<div class="profile-container">

    <br />

    <!-- Mensaje de éxito tras guardar cambios -->
    @if (TempData["UpdateSuccess"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["UpdateSuccess"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Cerrar"></button>
        </div>
    }

    <div class="profile-header">
        <h1 id="userNameDisplay">@Model.Nombre</h1>
       
        <div>
            <p id="userEmailDisplay" class="d-inline">@ViewContext.HttpContext.Session.GetString("UserEmail")</p>
            <a href="@Url.Action("ChangeEmail", "Account")" id="editEmailBtn" class="ms-2">
                <i class="fa fa-edit"></i>
            </a>
        </div>

        <button id="toggleEditBtn" class="btn btn-link text-white">
            <i id="editIcon" class="fa fa-pencil"></i>
        </button>
    </div>
    <hr />
    <div class="profile-content">
        <form id="editProfileForm" asp-action="EditProfile" method="post">
            @Html.HiddenFor(model => model.IdUsuario)
            <table class="table table-bordered profile-table">
                <tr>
                    <th>Nombre</th>
                    <td>
                        @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @readonly = "readonly" })
                    </td>
                </tr>
                <tr>
                    <th>Teléfono</th>
                    <td>
                        @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control", @readonly = "readonly" })
                    </td>
                </tr>
                <tr>
                    <th>Dirección</th>
                    <td>
                        @Html.TextBoxFor(model => model.Direccion, new { @class = "form-control", @readonly = "readonly" })
                    </td>
                </tr>
                <tr>
                    <th>Documento de Identidad</th>
                    <td>
                        @Html.TextBoxFor(model => model.DocumentoIdentidad, new { @class = "form-control", @readonly = "readonly" })
                    </td>
                </tr>
                <tr>
                    <th>Contraseña</th>
                    <td>
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.Contrasena, new { @class = "form-control", type = "password", @readonly = "readonly", id = "passwordField" })
                            <button type="button" class="btn btn-outline-secondary" id="togglePasswordVisibility" disabled>
                                <i class="fa fa-eye" id="eyeIcon"></i>
                            </button>
                        </div>

                        <div class="progress mt-2" id="passwordStrength" style="display: none;">
                            <div class="progress-bar bg-danger" role="progressbar" style="width: 0%"></div>
                        </div>
                        <ul class="list-unstyled mt-2" id="passwordRequirements" style="display: none;">
                            <li id="length" class="text-danger">Mínimo 8 caracteres</li>
                            <li id="uppercase" class="text-danger">Al menos 1 letra mayúscula</li>
                            <li id="lowercase" class="text-danger">Al menos 1 letra minúscula</li>
                            <li id="number" class="text-danger">Al menos 1 número</li>
                            <li id="specialChar" class="text-danger">Al menos 1 carácter especial</li>
                        </ul>

                    </td>
                </tr>
            </table>
            <div class="text-center">
                <button type="submit" id="saveChangesBtn" class="btn btn-success" disabled>Guardar cambios</button>
            </div>
        </form>
    </div>
</div>

<!-- Modal para confirmar el descarte de cambios -->
<div class="modal fade" id="discardChangesModal" tabindex="-1" aria-labelledby="discardChangesModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="discardChangesModalLabel">Descartar cambios</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                ¿Desea descartar los cambios realizados?
            </div>
            <div class="modal-footer">
                <button type="button" id="modalCancelBtn" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
                <button type="button" id="modalConfirmBtn" class="btn btn-danger">Sí, descartar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal para confirmar con contraseña actual -->
<div class="modal fade" id="confirmPasswordModal" tabindex="-1" aria-labelledby="confirmPasswordModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmPasswordModalLabel">Confirmar cambios</h5>
            </div>
            <div class="modal-body">
                <p>Para guardar los cambios, ingrese su contraseña actual:</p>
                <input type="password" class="form-control" id="confirmPasswordInput" />
                <small id="confirmPasswordError" class="text-danger"></small>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-success" id="confirmSaveChanges">Confirmar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var originalData = {};
            var isEditing = false;
            var hasChanges = false;
            var originalPassword = $('#passwordField').val(); // Guardar la contraseña original

            // Capturamos los datos originales para comparar cambios
            function captureOriginalData() {
                $('#editProfileForm').find('input[type="text"], input[type="password"]').each(function () {
                    originalData[$(this).attr('name')] = $(this).val();
                });
            }
            captureOriginalData();

            function checkForChanges() {
                hasChanges = false;
                $('#editProfileForm').find('input[type="text"], input[type="password"]').each(function () {
                    if ($(this).val() !== originalData[$(this).attr('name')]) {
                        hasChanges = true;
                        return false;
                    }
                });
                $('#saveChangesBtn').prop('disabled', !hasChanges);
            }

            $('#editProfileForm').find('input').on('input', function () {
                checkForChanges();
            });

            $('#toggleEditBtn').click(function (e) {
                e.preventDefault();
                if (!isEditing) {
                    isEditing = true;
                    $('#editProfileForm').find('input').removeAttr('readonly');
                    $('#editIcon').removeClass('fa-pencil').addClass('fa-lock');
                    $('#saveChangesBtn').show();
                    $('#togglePasswordVisibility').prop('disabled', false);
                } else {
                    if (hasChanges) {
                        $('#discardChangesModal').modal('show');
                    } else {
                        toggleToReadOnly();
                    }
                }
            });

            $('#modalConfirmBtn').click(function () {
                for (var key in originalData) {
                    $('[name="' + key + '"]').val(originalData[key]);
                }
                checkForChanges();
                $('#discardChangesModal').modal('hide');
                toggleToReadOnly();
            });

            $('#modalCancelBtn').click(function () {
                $('#discardChangesModal').modal('hide');
            });

            function toggleToReadOnly() {
                isEditing = false;
                $('#editProfileForm').find('input').prop('readonly', true);
                $('#editIcon').removeClass('fa-lock').addClass('fa-pencil');
                $('#saveChangesBtn').prop('disabled', true).hide();
                $('#togglePasswordVisibility').prop('disabled', true);
                $('#passwordField').attr('type', 'password');
                $('#eyeIcon').removeClass('fa-eye-slash').addClass('fa-eye');
            }

            $('#togglePasswordVisibility').click(function () {
                let passwordField = $('#passwordField');
                let icon = $('#eyeIcon');

                if (passwordField.attr('type') === 'password') {
                    passwordField.attr('type', 'text');
                    icon.removeClass('fa-eye').addClass('fa-eye-slash');
                } else {
                    passwordField.attr('type', 'password');
                    icon.removeClass('fa-eye-slash').addClass('fa-eye');
                }
            });

            // **Nuevo: Modal para confirmar cambios con contraseña actual**
            $('#saveChangesBtn').click(function (e) {
                e.preventDefault();
                if (hasChanges) {
                    $('#confirmPasswordModal').modal('show');
                }
            });

            $('#confirmSaveChanges').click(function () {
                var confirmPassword = $('#confirmPasswordInput').val().trim();
                var confirmPasswordError = $('#confirmPasswordError');

                if (confirmPassword === '') {
                    confirmPasswordError.text('Debe ingresar su contraseña actual para confirmar los cambios.');
                } else {
                    confirmPasswordError.text('');
                    $('#confirmPasswordModal').modal('hide');
                    $('#editProfileForm').submit();
                }
            });

            // Teléfono: Formateo automático
            $('input[name="Telefono"]').on('input', function () {
                let value = $(this).val().replace(/[^0-9]/g, '');
                if (value.length > 4) {
                    $(this).val(value.slice(0, 4) + '-' + value.slice(4, 8));
                } else {
                    $(this).val(value);
                }
            });

            // Documento de Identidad: Formateo automático
            $('input[name="DocumentoIdentidad"]').on('input', function () {
                let value = $(this).val().replace(/[^0-9]/g, '');
                if (value.length > 8) {
                    $(this).val(value.slice(0, 8) + '-' + value.slice(8, 9));
                } else {
                    $(this).val(value);
                }
            });

            // Contraseña: Validación y barra de fuerza
            $('#passwordField').on('input', function () {
                let password = $(this).val().trim();
                let strength = 0;
                const passwordStrength = $('#passwordStrength');
                const requirementsList = $('#passwordRequirements');

                if (password !== originalPassword) {
                    passwordStrength.show();
                    requirementsList.show();
                } else {
                    passwordStrength.hide();
                    requirementsList.hide();
                }

                const conditions = [
                    { regex: /.{8,}/, elementId: 'length' },
                    { regex: /[A-Z]/, elementId: 'uppercase' },
                    { regex: /[a-z]/, elementId: 'lowercase' },
                    { regex: /[0-9]/, elementId: 'number' },
                    { regex: /[^a-zA-Z0-9]/, elementId: 'specialChar' }
                ];

                let fulfilledConditions = 0;

                conditions.forEach(condition => {
                    if (condition.regex.test(password)) {
                        $('#' + condition.elementId).removeClass('text-danger').addClass('text-success');
                        fulfilledConditions++;
                    } else {
                        $('#' + condition.elementId).removeClass('text-success').addClass('text-danger');
                    }
                });

                strength = (fulfilledConditions / conditions.length) * 100;
                passwordStrength.css('width', `${strength}%`);

                if (fulfilledConditions === conditions.length) {
                    passwordStrength.removeClass('bg-danger bg-warning').addClass('bg-success');
                } else {
                    passwordStrength.removeClass('bg-success').addClass('bg-warning');
                }
            });

            $('#modalConfirmBtn').click(function () {
                $('#passwordField').val(originalPassword);
                $('#passwordStrength, #passwordRequirements').hide();
            });

            $('#saveChangesBtn').hide();
            $('#togglePasswordVisibility').prop('disabled', true);

            $("#editProfileForm").on("submit", function () {
                isEditing = false;
            });

            window.addEventListener('beforeunload', function (e) {
                if (isEditing && hasChanges) {
                    e.preventDefault();
                    e.returnValue = 'Tienes cambios sin guardar. ¿Estás seguro de que quieres salir?';
                    return 'Tienes cambios sin guardar. ¿Estás seguro de que quieres salir?';
                }
            });
        });
    </script>
}
