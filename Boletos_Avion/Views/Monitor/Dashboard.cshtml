@model List<Boletos_Avion.Models.Vuelo>
@{
    ViewData["Title"] = "Panel Monitor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/css/dashboardMonitor.css" asp-append-version="true" />


<h1 class="display-4 ">Panel Monitor de @ViewBag.NombreAerolinea</h1>
<p class="text-muted">📧 @ViewBag.CorreoMonitor</p>

<hr />

<h4>✈️ Vuelos de @ViewBag.NombreAerolinea</h4>

<div class="mb-3">
    <button class="btn btn-crear" data-bs-toggle="modal" data-bs-target="#modalCrearVuelo">
        ➕ Crear Vuelo
    </button>
</div>

@if (Model.Count == 0)
{
    <p>No hay vuelos registrados para esta aerolínea.</p>
}
else
{
    <table class="table table-bordered table-striped mt-3">
        <thead class="thead-dark">
            <tr>
                <th>Código</th>
                <th>Origen</th>
                <th>Destino</th>
                <th>Salida</th>
                <th>Llegada</th>
                <th>Precio</th>
                <th>Estado</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var vuelo in Model)
            {
                <tr class="table-row-hover" style="cursor:pointer;" onclick="abrirModalEdicion(@vuelo.IdVuelo)">
                    <td>@vuelo.CodigoVuelo</td>
                    <td>@vuelo.CiudadOrigen</td>
                    <td>@vuelo.CiudadDestino</td>
                    <td>@vuelo.FechaSalida.ToString("dd/MM/yyyy HH:mm")</td>
                    <td>@vuelo.FechaLlegada.ToString("dd/MM/yyyy HH:mm")</td>
                    <td>$@vuelo.PrecioBase</td>
                    <td>@vuelo.Estado</td>
                </tr>
            }
        </tbody>
    </table>
}

<div class="modal fade" id="modalCrearVuelo" tabindex="-1" aria-labelledby="modalCrearVueloLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="formCrearVuelo">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalCrearVueloLabel">🛫 Crear Nuevo Vuelo</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">

                    <div class="mb-3">
                        <label class="form-label">Código de Vuelo</label>
                        <input name="CodigoVuelo" class="form-control" required />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Ciudad Origen</label>
                        <select id="ciudadOrigen" name="IdCiudadOrigen" class="form-select" required>
                            <option value="">Seleccione una ciudad</option>
                            @foreach (var ciudad in ViewBag.Ciudades as List<Boletos_Avion.Models.Ciudad>)
                            {
                                <option value="@ciudad.IdCiudad">@ciudad.Nombre</option>
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Aeropuerto Origen</label>
                        <select id="aeropuertoOrigen" name="IdAeropuertoOrigen" class="form-select" required>
                            <option value="">Seleccione un aeropuerto</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Ciudad Destino</label>
                        <select id="ciudadDestino" name="IdCiudadDestino" class="form-select" required>
                            <option value="">Seleccione una ciudad</option>
                            @foreach (var ciudad in ViewBag.Ciudades as List<Boletos_Avion.Models.Ciudad>)
                            {
                                <option value="@ciudad.IdCiudad">@ciudad.Nombre</option>
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Aeropuerto Destino</label>
                        <select id="aeropuertoDestino" name="IdAeropuertoDestino" class="form-select" required>
                            <option value="">Seleccione un aeropuerto</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Categoría de Vuelo</label>
                        <select name="IdCategoriaVuelo" class="form-select" required>
                            <option value="">Seleccione una categoría</option>
                            @foreach (var cat in ViewBag.CategoriasVuelo as List<Boletos_Avion.Models.CategoriaVuelo>)
                            {
                                <option value="@cat.IdCategoriaVuelo">@cat.Nombre</option>
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Fecha de Salida</label>
                        <input type="datetime-local" name="FechaSalida" class="form-control" required />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Fecha de Llegada</label>
                        <input type="datetime-local" name="FechaLlegada" class="form-control" required />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Precio Base (USD)</label>
                        <input type="number" step="0.01" name="PrecioBase" class="form-control" required />
                    </div>

                    <div class="alert alert-info fw-semibold text-center">
                        🪑 Debe ingresar entre <strong>80</strong> y <strong>100</strong> asientos en total.
                    </div>

                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label class="form-label">Primera Clase</label>
                            <input type="number" name="CantidadPrimera" id="CantidadPrimera" class="form-control" min="0" value="0" required />
                        </div>
                        <div class="col-md-4 mb-3">
                            <label class="form-label">Business</label>
                            <input type="number" name="CantidadBusiness" id="CantidadBusiness" class="form-control" min="0" value="0" required />
                        </div>
                        <div class="col-md-4 mb-3">
                            <label class="form-label">Turista</label>
                            <input type="number" name="CantidadTurista" id="CantidadTurista" class="form-control" min="0" value="0" required />
                        </div>
                    </div>

                    <input type="hidden" name="CantidadAsientos" id="CantidadAsientos" />

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-vuelo">Crear Vuelo</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="modalEditarVuelo" tabindex="-1" aria-labelledby="modalEditarVueloLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="formEditarVuelo">
                <div class="modal-header d-flex flex-column align-items-start">
                    <div class="w-100 d-flex justify-content-between align-items-center mb-2">

                        <h5 class="modal-title">📝 Detalles del Vuelo</h5>

                        <div class="w-100 text-center">
                            <span id="estadoVueloTexto" class="fs-5 fw-semibold">
                                <span id="estadoCirculo" class="me-2 rounded-circle d-inline-block" style="width: 15px; height: 15px;"></span>
                                <span id="estadoTexto">Estado</span>
                            </span>
                        </div>

                        <button type="button" id="btnAccionVuelo" class="btn">
                            Cancelar vuelo
                        </button>

                    </div>
                <div class="modal-body">
                    <input type="hidden" id="editIdVuelo" name="IdVuelo" />

                    <div class="mb-3">
                        <label class="form-label">Código de Vuelo</label>
                        <input class="form-control" id="editCodigoVuelo" disabled />
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Ciudad Origen</label>
                            <select id="editCiudadOrigen" class="form-select" disabled>
                                <option value="">Seleccione una ciudad</option>
                                @foreach (var ciudad in ViewBag.Ciudades as List<Boletos_Avion.Models.Ciudad>)
                                {
                                    <option value="@ciudad.IdCiudad">@ciudad.Nombre</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Aeropuerto Origen</label>
                            <select id="editAeropuertoOrigen" class="form-select" disabled>
                                <option value="">Seleccione un aeropuerto</option>
                            </select>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Ciudad Destino</label>
                            <select id="editCiudadDestino" class="form-select" disabled>
                                <option value="">Seleccione una ciudad</option>
                                @foreach (var ciudad in ViewBag.Ciudades as List<Boletos_Avion.Models.Ciudad>)
                                {
                                    <option value="@ciudad.IdCiudad">@ciudad.Nombre</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Aeropuerto Destino</label>
                            <select id="editAeropuertoDestino" class="form-select" disabled>
                                <option value="">Seleccione un aeropuerto</option>
                            </select>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Categoría de Vuelo</label>
                        <select class="form-select" id="editCategoriaVuelo" disabled>
                            <option value="">Seleccione una categoría</option>
                            @foreach (var cat in ViewBag.CategoriasVuelo as List<Boletos_Avion.Models.CategoriaVuelo>)
                            {
                                <option value="@cat.IdCategoriaVuelo">@cat.Nombre</option>
                            }
                        </select>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Fecha de Salida</label>
                            <input type="datetime-local" id="editFechaSalida" class="form-control" disabled />
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Fecha de Llegada</label>
                            <input type="datetime-local" id="editFechaLlegada" class="form-control" disabled />
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Precio Base (USD)</label>
                        <input type="number" step="0.01" id="editPrecioBase" class="form-control" disabled />
                    </div>
                </div>

                    <button type="button" id="btnGuardarCambiosVuelo" class="btn btn-primary" style="display: none;" onclick="guardarCambiosVuelo()">
                        <i class="bi bi-save"></i> Guardar Cambios
                    </button>

            </form>
        </div>
    </div>
</div>

<script>
        function cargarAeropuertos(idCiudad, selectId, idSeleccionado = null) {
        console.log(`🔽 Buscando aeropuertos para ciudad ${idCiudad}, select: ${selectId}`);

        fetch(`/Monitor/GetAeropuertosPorCiudad?idCiudad=${idCiudad}`)
            .then(response => response.json())
            .then(data => {
                const select = document.getElementById(selectId);
                select.innerHTML = "";

                if (data.length === 0) {
                    console.warn(`⚠️ No hay aeropuertos para ciudad ID ${idCiudad}`);
                    const option = document.createElement("option");
                    option.text = "No hay aeropuertos disponibles";
                    option.disabled = true;
                    option.selected = true;
                    select.appendChild(option);
                } else {
                    data.forEach((aeropuerto) => {
                        const option = document.createElement("option");
                        option.value = aeropuerto.idAeropuerto;
                        option.text = aeropuerto.nombre;
                        if (idSeleccionado && aeropuerto.idAeropuerto === idSeleccionado) {
                            option.selected = true;
                            console.log("✅ Aeropuerto seleccionado:", aeropuerto.nombre);
                        }
                        select.appendChild(option);
                    });

                    if (idSeleccionado && ![...select.options].some(o => o.value == idSeleccionado)) {
                        console.warn(`❌ Aeropuerto ID ${idSeleccionado} no está en la lista`);
                    }
                }

                validarFormulario();
            })
            .catch(error => {
                console.error("❌ Error al cargar aeropuertos:", error);
            });
    }


    function validarFormulario() {
        const form = document.getElementById("formCrearVuelo");
        const submitBtn = form.querySelector('button[type="submit"]');

        const requiredFields = form.querySelectorAll("input[required], select[required]");
        let isValid = true;

        requiredFields.forEach(field => {
            if (!field.value || field.value.trim() === "") {
                isValid = false;
            }
        });

        const totalAsientos = parseInt(document.getElementById("CantidadAsientos")?.value || 0);
        if (totalAsientos < 80 || totalAsientos > 100) {
            isValid = false;
        }

        submitBtn.disabled = !isValid;
    }

    function validarCantidadAsientosPorTipo() {
        const primera = parseInt(document.getElementById("CantidadPrimera").value) || 0;
        const business = parseInt(document.getElementById("CantidadBusiness").value) || 0;
        const turista = parseInt(document.getElementById("CantidadTurista").value) || 0;

        const total = primera + business + turista;
        const totalInput = document.getElementById("CantidadAsientos");
        const submitBtn = document.querySelector("#formCrearVuelo button[type='submit']");

        totalInput.value = total;

        if (total < 80 || total > 100) {
            submitBtn.disabled = true;
        } else {
            validarFormulario();
        }
    }

                        function abrirModalEdicion(idVuelo) {
        fetch(`/Monitor/ObtenerVuelo?idVuelo=${idVuelo}`)
            .then(response => {
                if (!response.ok) throw new Error("No se pudo obtener el vuelo");
                return response.json();
            })
            .then(vuelo => {
                console.log("✅ Vuelo recibido:", vuelo);

                document.getElementById("editIdVuelo").value = vuelo.idVuelo;
                document.getElementById("editCodigoVuelo").value = vuelo.codigoVuelo;
                document.getElementById("editPrecioBase").value = vuelo.precioBase;
                document.getElementById("editFechaSalida").value = vuelo.fechaSalida;
                document.getElementById("editFechaLlegada").value = vuelo.fechaLlegada;

                // Ciudad ORIGEN
                const ciudadOrigenSelect = document.getElementById("editCiudadOrigen");
                ciudadOrigenSelect.value = vuelo.idCiudadOrigen;
                console.log("🌍 Ciudad Origen ID:", vuelo.idCiudadOrigen);

                setTimeout(() => {
                    console.log("📡 Cargando aeropuertos origen...");
                    cargarAeropuertos(vuelo.idCiudadOrigen, "editAeropuertoOrigen", vuelo.idAeropuertoOrigen);
                }, 200);

                // Ciudad DESTINO
                const ciudadDestinoSelect = document.getElementById("editCiudadDestino");
                ciudadDestinoSelect.value = vuelo.idCiudadDestino;
                console.log("🌍 Ciudad Destino ID:", vuelo.idCiudadDestino);

                setTimeout(() => {
                    console.log("📡 Cargando aeropuertos destino...");
                    cargarAeropuertos(vuelo.idCiudadDestino, "editAeropuertoDestino", vuelo.idAeropuertoDestino);
                }, 200);

                // Categoría
                const selectCategoria = document.getElementById("editCategoriaVuelo");
                if (selectCategoria) {
                    const idCategoria = String(vuelo.idCategoriaVuelo);
                    const option = [...selectCategoria.options].find(o => o.value === idCategoria);
                    if (option) {
                        option.selected = true;
                        console.log("📌 Categoría seleccionada:", option.text);
                    } else {
                        console.warn("⚠️ No se encontró opción para la categoría:", idCategoria);
                    }
                }

                // Estado 
                const estadoCirculo = document.getElementById("estadoCirculo");
                const estadoTexto = document.getElementById("estadoTexto");

                estadoTexto.textContent = vuelo.estado;

                estadoCirculo.className = "me-2 rounded-circle d-inline-block";

                if (vuelo.estado === "Disponible") {
                    estadoCirculo.style.backgroundColor = "green";
                } else if (vuelo.estado === "Lleno") {
                    estadoCirculo.style.backgroundColor = "orange";
                } else if (vuelo.estado === "Cancelado") {
                    estadoCirculo.style.backgroundColor = "red";
                } else {
                    estadoCirculo.style.backgroundColor = "gray";
                }

                // Botón dinámico
                const btnAccion = document.getElementById("btnAccionVuelo");
                const btnGuardar = document.getElementById("btnGuardarCambiosVuelo");

                if (vuelo.estado === "Cancelado") {
                    btnAccion.textContent = "Disponibilizar";
                    btnAccion.className = "btn btn-success";

                    btnGuardar.style.display = "inline-block";
                    document.getElementById("editFechaSalida").disabled = false;
                    document.getElementById("editFechaLlegada").disabled = false;
                    document.getElementById("editAeropuertoOrigen").disabled = false;
                    document.getElementById("editAeropuertoDestino").disabled = false;
                    document.getElementById("editPrecioBase").disabled = false;
                } else {
                    btnAccion.textContent = "Cancelar vuelo";
                    btnAccion.className = "btn btn-danger";

                    btnGuardar.style.display = "none";
                    document.getElementById("editFechaSalida").disabled = true;
                    document.getElementById("editFechaLlegada").disabled = true;
                    document.getElementById("editAeropuertoOrigen").disabled = true;
                    document.getElementById("editAeropuertoDestino").disabled = true;
                    document.getElementById("editPrecioBase").disabled = true;
                }

                const modal = new bootstrap.Modal(document.getElementById("modalEditarVuelo"));
                modal.show();
            })
            .catch(error => {
                console.error("❌ Error al abrir modal de edición:", error);
                alert("❌ Ocurrió un error al intentar cargar los detalles del vuelo.");
            });
    }

    document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById("formCrearVuelo");
        const ciudadOrigen = document.getElementById("ciudadOrigen");
        const ciudadDestino = document.getElementById("ciudadDestino");

        if (ciudadOrigen) {
            ciudadOrigen.addEventListener("change", () => {
                cargarAeropuertos(ciudadOrigen.value, "aeropuertoOrigen");
            });
            if (ciudadOrigen.value) {
                cargarAeropuertos(ciudadOrigen.value, "aeropuertoOrigen");
            }
        }

        if (ciudadDestino) {
            ciudadDestino.addEventListener("change", () => {
                cargarAeropuertos(ciudadDestino.value, "aeropuertoDestino");
            });
            if (ciudadDestino.value) {
                cargarAeropuertos(ciudadDestino.value, "aeropuertoDestino");
            }
        }

        if (form) {
            const inputs = form.querySelectorAll("input[required], select[required]");
            inputs.forEach(input => {
                input.addEventListener("input", validarFormulario);
                input.addEventListener("change", validarFormulario);
            });

            ["CantidadPrimera", "CantidadBusiness", "CantidadTurista"].forEach(id => {
                const input = document.getElementById(id);
                if (input) {
                    input.addEventListener("input", validarCantidadAsientosPorTipo);
                }
            });

            validarFormulario();

            form.addEventListener("submit", function (e) {
                e.preventDefault();

                const formData = new FormData(form);

                fetch("/Monitor/CrearVuelo", {
                    method: "POST",
                    body: formData
                })
                    .then(response => {
                        if (!response.ok) throw new Error("Error al crear el vuelo");
                        return response.text();
                    })
                    .then(result => {
                        alert("✅ " + result);
                        const modal = bootstrap.Modal.getOrCreateInstance(document.getElementById("modalCrearVuelo"));
                        modal.hide();
                        setTimeout(() => window.location.reload(), 1000);
                    })
                    .catch(error => {
                        alert("❌ " + error.message);
                    });
            });
        }
    });

                document.getElementById("btnAccionVuelo").addEventListener("click", function () {
        const idVuelo = document.getElementById("editIdVuelo").value;
        const estadoTexto = document.getElementById("estadoTexto").textContent.trim();

        if (!idVuelo || idVuelo === "0") {
            alert("❌ ID del vuelo inválido.");
            return;
        }

        if (estadoTexto === "Cancelado") {
            // DISPONIBILIZAR VUELO
            const confirmacion = confirm("¿Deseas disponibilizar este vuelo nuevamente?");
            if (!confirmacion) return;

            fetch(`/Monitor/DisponibilizarVuelo`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/x-www-form-urlencoded"
                },
                body: `idVuelo=${idVuelo}`
            })
            .then(response => {
                if (!response.ok) throw new Error("Error al disponibilizar el vuelo.");
                return response.text();
            })
            .then(msg => {
                alert("✅ " + msg);
                const modal = bootstrap.Modal.getOrCreateInstance(document.getElementById("modalEditarVuelo"));
                modal.hide();
                setTimeout(() => window.location.reload(), 1000);
            })
            .catch(error => {
                console.error("❌ Error al disponibilizar vuelo:", error);
                alert("❌ Ocurrió un error al intentar disponibilizar el vuelo.");
            });

        } else {
            // CANCELAR VUELO
            const confirmacion = confirm("⚠️ ¿Estás seguro de que deseas cancelar este vuelo?\nEsto afectará reservas y asientos.");
            if (!confirmacion) return;

            fetch(`/Monitor/CancelarVuelo?idVuelo=${idVuelo}`, {
                method: "POST"
            })
            .then(response => {
                if (!response.ok) throw new Error("Error al cancelar el vuelo");
                return response.text();
            })
            .then(msg => {
                alert("✅ " + msg);
                const modal = bootstrap.Modal.getOrCreateInstance(document.getElementById("modalEditarVuelo"));
                modal.hide();
                setTimeout(() => window.location.reload(), 1000);
            })
            .catch(error => {
                console.error("❌ Error al cancelar vuelo:", error);
                alert("❌ Ocurrió un error al cancelar el vuelo.");
            });
        }
    });

        function guardarCambiosVuelo() {
        const formData = new URLSearchParams();
        formData.append("idVuelo", document.getElementById("editIdVuelo").value);
        formData.append("precioBase", document.getElementById("editPrecioBase").value);
        formData.append("fechaSalida", document.getElementById("editFechaSalida").value);
        formData.append("fechaLlegada", document.getElementById("editFechaLlegada").value);
        formData.append("idAeropuertoOrigen", document.getElementById("editAeropuertoOrigen").value);
        formData.append("idAeropuertoDestino", document.getElementById("editAeropuertoDestino").value);

        fetch("/Monitor/ActualizarVuelo", {
            method: "POST",
            headers: {
                "Content-Type": "application/x-www-form-urlencoded"
            },
            body: formData.toString()
        })
        .then(response => {
            if (!response.ok) throw new Error("Error al guardar los cambios");
            return response.text();
        })
        .then(msg => {
            alert("✅ " + msg);
            const modal = bootstrap.Modal.getOrCreateInstance(document.getElementById("modalEditarVuelo"));
            modal.hide();
            setTimeout(() => window.location.reload(), 1000);
        })
        .catch(error => {
            console.error("❌ Error al guardar cambios del vuelo:", error);
            alert("❌ Ocurrió un error al guardar los cambios.");
        });
    }

        function disponibilizarVuelo() {
        const idVuelo = document.getElementById("editIdVuelo").value;

        if (!idVuelo || idVuelo === "0") {
            alert("❌ ID del vuelo inválido.");
            return;
        }

        const confirmacion = confirm("¿Deseas disponibilizar este vuelo nuevamente?");

        if (!confirmacion) return;

        fetch(`/Monitor/DisponibilizarVuelo`, {
            method: "POST",
            headers: {
                "Content-Type": "application/x-www-form-urlencoded"
            },
            body: `idVuelo=${idVuelo}`
        })
        .then(response => {
            if (!response.ok) throw new Error("Error al cambiar el estado del vuelo.");
            return response.text();
        })
        .then(msg => {
            alert("✅ " + msg);
            const modal = bootstrap.Modal.getOrCreateInstance(document.getElementById("modalEditarVuelo"));
            modal.hide();
            setTimeout(() => window.location.reload(), 1000);
        })
        .catch(error => {
            console.error("❌ Error al disponibilizar vuelo:", error);
            alert("❌ Ocurrió un error al intentar disponibilizar el vuelo.");
        });
    }


</script>

<style>
    .table-row-hover:hover {
        background-color: #f0f0f0;
        transition: background-color 0.3s ease;
    }
</style>

